# Generated by Django 4.2.6 on 2024-04-04 02:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('predictions', '0015_remove_season_season_type'),
    ]

    operations = [
        migrations.AlterField(
            model_name='teamseasonstats',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasonseason_stats', to='predictions.season'),
        ),
        migrations.AlterField(
            model_name='teamseasonstats',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamseason_stats', to='predictions.team'),
        ),
        migrations.CreateModel(
            name='RegularSeasonStandings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_type', models.CharField(choices=[('regular', 'Regular Season'), ('post', 'Post Season'), ('ist', 'In-Season Tournament')], max_length=50)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('team', 'season', 'season_type')},
            },
        ),
        migrations.CreateModel(
            name='PostSeasonStandings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_type', models.CharField(choices=[('regular', 'Regular Season'), ('post', 'Post Season'), ('ist', 'In-Season Tournament')], max_length=50)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_playoff', to='predictions.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_playoff', to='predictions.team')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('team', 'season', 'season_type')},
            },
        ),
        migrations.CreateModel(
            name='InSeasonTournamentStandings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_type', models.CharField(choices=[('regular', 'Regular Season'), ('post', 'Post Season'), ('ist', 'In-Season Tournament')], max_length=50)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('ist_group', models.CharField(max_length=50)),
                ('ist_group_rank', models.IntegerField()),
                ('ist_knockout_rank', models.IntegerField()),
                ('ist_differential', models.IntegerField()),
                ('ist_points', models.IntegerField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('team', 'season', 'season_type')},
            },
        ),
    ]
